<?php

class Best2pay extends Core
{
    /**
     * Тестовые карты
     * 
        2200200111114591, 05/2022, 426 // отмена
        5570725111081379, 05/2022, 415 с 3ds // проведена
        4809388889655340, 05/2022, 195 // проведена
     */
    
    private $url = 'https://test.best2pay.net/';
    private $currency_code = 643;
    
    private $fee = 0.02;
    private $min_fee = 3000;
    
    // пары сектор => пароль
    private $sectors = array(
        '2241' => 'test', //сектор для отправки кредита на карту клиента 
    );
    
    public function __construct()
    {
        parent::__construct();
    }
    
    
    public function pay_credit($card_id, $amount, $sector = 2241)
    {
        $password = $this->settings->apikeys['best2pay'][$sector];
                
        if (!($card = $this->cards->get_card($card_id)))
            return false;
    
        if (!($user = $this->users->get_user((int)$card->user_id)))
            return false;

        $data = array(
            'sector' => $sector,
            'amount' => $amount,
            'currency' => $this->currency_code,
            'pan' => $card->pan,
            'reference' => $user->id,
            'token' => $card->token,
        );
        $data['signature'] = $this->get_signature(array(
            $data['sector'], 
            $data['amount'], 
            $data['currency'], 
            $data['pan'], 
            $data['token'], 
            $password
        ));
        
        $recurring = $this->send('P2PCredit', $data, 'gateweb');
        echo __FILE__.' '.__LINE__.'<br /><pre>';var_dump($data);echo(htmlspecialchars($recurring));echo '</pre><hr />';
    }
    
    public function recurrent($card_id, $amount, $description, $sector = 2242)
    {
        $password = $this->settings->apikeys['best2pay'][$sector];
        $fee = max($this->min_fee, floatval($amount * $this->fee));
                
        if (!($card = $this->cards->get_card($card_id)))
            return false;
    
        if (!($user = $this->users->get_user((int)$card->user_id)))
            return false;
        
        $data = array(
            'sector' => $sector,
            'id' => $card->register_id,
            'amount' => $amount,
            'currency' => $this->currency_code,
            'fee' => $fee
        );
        $data['signature'] = $this->get_signature(array(
            $data['sector'], 
            $data['id'], 
            $data['amount'], 
            $data['fee'], 
            $data['currency'], 
            $password
        ));
        
        $recurring = $this->send('Recurring', $data);
echo __FILE__.' '.__LINE__.'<br /><pre>';echo(htmlspecialchars($recurring));echo '</pre><hr />';
        
    }
    
    /**
     * Best2pay::add_card()
     * 
     * Метод возврашает ссылку для привязки карты
     * 
     * @param integer $user_id
     * @param integer $sector
     * @return string $link
     */
    public function add_card($user_id, $sector = 2516)
    {
        $password = $this->settings->apikeys['best2pay'][$sector];
        
        $amount = 1000; 
        $description = 'Привязка карты'; // описание операции
        
        if (!($user = $this->users->get_user((int)$user_id)))
            return false;
        
        $user_address = $user->Regstreet_shorttype.' '.$user->Regstreet.', д.'.$user->Reghousing;
        if (!empty($user->Regbuilding))
            $user_address .= ', стр.'.$user->Regbuilding;
        if (!empty($user->Regroom))
            $user_address .= ', кв.'.$user->Regroom;
        
        $user_city = $user->Regregion_shorttype.' '.$user->Regregion.' '.$user->Regcity_shorttype.' '.$user->Regcity;
        
        // регистрируем оплату
        $data = array(
            'sector' => $sector,
            'amount' => $amount,
            'currency' => $this->currency_code,
            'reference' => $user_id,
            'client_ref' => $user_id,
            'description' => $description,
            'address' => $user_address,
            'city' => $user_city,
//            'phone' => $user->phone_mobile,
//            'email' => $user->email,
            'first_name' => $user->firstname,
            'last_name' => $user->lastname,
            'patronymic' => $user->patronymic,
            'url' => $this->config->front_url.'/best2pay_callback/add_card',
            'recurring_period' => 0,
//            'mode' => 1
        );
        $data['signature'] = $this->get_signature(array($data['sector'], $data['amount'], $data['currency'], $password));
        
        $b2p_order = $this->send('Register', $data);

        $xml = simplexml_load_string($b2p_order);
        $b2p_order_id = (string)$xml->id;

        $transaction_id = $this->transactions->add_transaction(array(
            'user_id' => $user_id,
            'amount' => $amount,
            'sector' => $sector,
            'register_id' => $b2p_order_id,
            'reference' => $user_id,
            'description' => $description,
            'created' => date('Y-m-d H:i:s'),
        ));

        // получаем ссылку на оплату 10руб для привязки карты
        $data = array(
            'sector' => $sector,
            'id' => $b2p_order_id,
            'get_token' => 1,
        );
        $data['signature'] = $this->get_signature(array($sector, $b2p_order_id, $password));

        $link = $this->url.'webapi/Purchase?'.http_build_query($data);
//echo __FILE__.' '.__LINE__.'<br /><pre>';echo(htmlspecialchars($b2p_order));echo '</pre><hr />';  
        
        return $link;

    }
    
    
    
    public function get_operation_info($sector, $register_id, $operation_id)
    {
        $password = $this->settings->apikeys['best2pay'][$sector];
        
        $data = array(
            'sector' => $sector,
            'id' => $register_id,
            'operation' => $operation_id,
            'get_token' => 1
        );
        $data['signature'] = $this->get_signature(array($sector, $register_id, $operation_id, $password));
        
        $info = $this->send('Operation', $data);
    
        return $info;
    }
        
    public function get_register_info($sector, $register_id, $get_token = 1)
    {
        $password = $this->settings->apikeys['best2pay'][$sector];
        
        $data = array(
            'sector' => $sector,
            'id' => $register_id,
            'mode' => 1,
            'get_token' => $get_token
        );
        $data['signature'] = $this->get_signature(array($sector, $register_id, $password));
        
        $info = $this->send('Order', $data);
    
        return $info;
    }
    
    /**
     * Best2pay::get_payment_link()
     * 
     * Метод возвращает ссылку для оплаты любой картой
     * 
     * @param int $amount - Сумма платежа в копейках
     * @param string $order_id - Номер заказа
     * @return string
     */
    public function get_payment_link($amount, $order_id, $sector = 2242)
    {
        $password = $this->settings->apikeys['best2pay'][$sector];
        
        // регистрируем оплату
        $data = array(
            'sector' => $sector,
            'amount' => $amount,
            'currency' => $this->currency_code,
            'reference' => $order_id,
            'description' => 'Оплата по договору '.$order_id,
            'mode' => 1
        );
        $data['signature'] = $this->get_signature(array(
            $data['sector'], 
            $data['amount'], 
            $data['currency'], 
            $password
        ));
        
        $b2p_order_id = $this->send('Register', $data);
        
        // получаем длинную ссылку на оплату
        $data = array(
            'sector' => $sector,
            'id' => $b2p_order_id
        );
        $data['signature'] = $this->get_signature(array($sector, $b2p_order_id, $password));

        $link = $this->url.'webapi/Purchase?'.http_build_query($data);
    
        return $link;
        
    }
    
    private function send($method, $data, $type = 'webapi')
    {
        $string_data = http_build_query($data);
        $context = stream_context_create(array(
            'http' => array(
                'header'  => "Content-Type: application/x-www-form-urlencoded\r\n"
                    . "Content-Length: " . strlen($string_data) . "\r\n",
                'method'  => 'POST',
                'content' => $string_data
            )
        ));
        $b2p = file_get_contents($this->url.$type.'/'.$method, false, $context);

        return $b2p;
    }
    
    private function get_signature($data)
    {
    	$str = '';
        foreach ($data as $item)
            $str .= $item;
        
        $md5 = md5($str);
        $signature = base64_encode($md5);
        
        return $signature;
    }
    
    public function get_reason_code_description($code)
    {
        $descriptions = array(
            2 => 'Неверный срок действия Банковской карты. <br />Платёж отклонён. Возможные причины: недостаточно средств на счёте, были указаны неверные реквизиты карты, по Вашей карте запрещены расчёты через Интернет. Пожалуйста, попробуйте выполнить платёж повторно или обратитесь в Банк, выпустивший Вашу карту. ',
            3 => 'Неверный статус Банковской карты на стороне Эмитента. <br />Платёж отклонён. Пожалуйста, обратитесь в Банк, выпустивший Вашу карту. ',
            4 => 'Операция отклонена Эмитентом. <br />Платёж отклонён. Пожалуйста, обратитесь в Банк, выпустивший Вашу карту. ',
            5 => 'Операция недопустима для Эмитента. Платёж отклонён. Пожалуйста, обратитесь в Банк, выпустивший Вашу карту. ',
            6 => 'Недостаточно средств на счёте Банковской карты. <br />Платёж отклонён. Возможные причины: недостаточно средств на счёте, были указаны неверные реквизиты карты, по Вашей карте запрещены расчёты через Интернет. Пожалуйста, попробуйте выполнить платёж повторно или обратитесь в Банк, выпустивший Вашу карту. ',
            7 => 'Превышен установленный для ТСП лимит на сумму операций (дневной, недельный, месячный) или сумма операции выходит за пределы установленных границ. <br />Платёж отклонён. Пожалуйста, обратитесь в Контактный центр. ',
            8 => 'Операция отклонена по причине срабатывания системы предотвращения мошенничества. <br />Платёж отклонён. Пожалуйста, обратитесь в Контактный центр. ',
            9 => 'Заказ уже находится в процессе оплаты. Операция, возможно, задублировалась. <br />Платёж отклонён. Пожалуйста, обратитесь в Контактный центр. ',
            10 => 'Системная ошибка. <br />Платёж отклонён. Пожалуйста, обратитесь в Контактный центр. ',
            11 => 'Ошибка 3DS аутентификации. <br />Платёж отклонён. Пожалуйста, обратитесь в Контактный центр. ',
            12 => 'Указано неверное значение секретного кода карты. <br />Платёж отклонён. Возможные причины: недостаточно средств на счёте, были указаны неверные реквизиты карты, по Вашей карте запрещены расчёты через Интернет. Пожалуйста, попробуйте выполнить платёж повторно или обратитесь в Банк, выпустивший Вашу карту. ',
            13 => 'Операция отклонена по причине недоступности Эмитента и/или Банка- эквайрера. <br />Платёж отклонён. Пожалуйста, попробуйте выполнить платёж позднее или обратитесь в Контактный центр. ',
            14 => 'Операция отклонена оператором электронных денег. <br />Платёж отклонён. Пожалуйста, обратитесь в платёжную систему, электронными деньгами которой Вы пытаетесь оплатить Заказ. ',
            15 => 'BIN платёжной карты присутствует в черных списках. <br />Платёж отклонён. Пожалуйста, обратитесь в Контактный центр. ',
            16 => 'BIN 2 платёжной карты присутствует в черных списках. <br />Платёж отклонён. Пожалуйста, обратитесь в Контактный центр. ',
            0 => 'Операция отклонена по другим причинам. Требуется уточнение у ПЦ.<br />Платёж отклонён. Пожалуйста, попробуйте выполнить платёж позднее или обратитесь в Контактный центр. '
        );
        
        return isset($descriptions[$code]) ? $descriptions[$code] : '';
    }
    
    
    
    
    
    
    
    
    
    
    public function add_card_old($user_id)
    {
        $sector = 2243;
        $password = $this->settings->apikeys['best2pay'][2243];

        $amount = 100; // сумма для списания > 100
        $description = 'Привязка карты'; // описание операции
// 812763
        // регистрируем оплату
        $data = array(
            'sector' => $sector,
            'amount' => $amount,
            'currency' => $this->currency_code,
            'reference' => $user_id,
            'description' => $description,
            'url' => 'http://nalic-front.eva-p.ru/best2pay_callback/add_card',
//            'mode' => 1
        );
        $data['signature'] = $this->get_signature(array($data['sector'], $data['amount'], $data['currency'], $password));
        
        $b2p_order = $this->send('Register', $data);

        $xml = simplexml_load_string($b2p_order);
        $b2p_order_id = (string)$xml->id;

        $transaction_id = $this->transactions->add_transaction(array(
            'user_id' => $user_id,
            'amount' => $amount,
            'sector' => $sector,
            'register_id' => $b2p_order_id,
            'reference' => $user_id,
            'description' => $description,
            'created' => date('Y-m-d H:i:s'),
        ));      
//exit;
        // получаем ссылку на привязку карты
        $data = array(
            'sector' => $sector,
            'id' => $b2p_order_id
        );
        $data['signature'] = $this->get_signature(array($sector, $b2p_order_id, $password));

        $link = $this->url.'CardEnroll?'.http_build_query($data);
        
        return $link;
    }
    
    
        
}